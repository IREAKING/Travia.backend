// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tour.sql

package db

import (
	"context"
)

const getAllTour = `-- name: GetAllTour :many
select id, tieu_de, mo_ta, danh_muc_id, so_ngay, so_dem, gia_moi_nguoi, don_vi_tien_te, trang_thai, noi_bat, nguoi_tao_id, nha_cung_cap_id, dang_hoat_dong, ngay_tao, ngay_cap_nhat from tour
`

func (q *Queries) GetAllTour(ctx context.Context) ([]Tour, error) {
	rows, err := q.db.Query(ctx, getAllTour)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tour
	for rows.Next() {
		var i Tour
		if err := rows.Scan(
			&i.ID,
			&i.TieuDe,
			&i.MoTa,
			&i.DanhMucID,
			&i.SoNgay,
			&i.SoDem,
			&i.GiaMoiNguoi,
			&i.DonViTienTe,
			&i.TrangThai,
			&i.NoiBat,
			&i.NguoiTaoID,
			&i.NhaCungCapID,
			&i.DangHoatDong,
			&i.NgayTao,
			&i.NgayCapNhat,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getAllTourCategory = `-- name: GetAllTourCategory :many
select id, ten, mo_ta, anh, dang_hoat_dong, ngay_tao from danh_muc_tour
`

func (q *Queries) GetAllTourCategory(ctx context.Context) ([]DanhMucTour, error) {
	rows, err := q.db.Query(ctx, getAllTourCategory)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []DanhMucTour
	for rows.Next() {
		var i DanhMucTour
		if err := rows.Scan(
			&i.ID,
			&i.Ten,
			&i.MoTa,
			&i.Anh,
			&i.DangHoatDong,
			&i.NgayTao,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
